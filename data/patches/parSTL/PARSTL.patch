diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0e6468a..2aa0d4b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,25 +3,25 @@ project(parSTL LANGUAGES CXX)
 set(CMAKE_BUILD_TYPE Release)
 
 if(HPX_DIR)
-    set(HPX_DIR ${HPX_DIR} CACHE PATH "HPX_DIR")
+set(HPX_DIR ${HPX_DIR} CACHE PATH "HPX_DIR")
 else()
-    error("HPX_DIR not set")
+error("HPX_DIR not set")
 endif()
 
 if(Kokkos_DIR)
-    set(Kokkos_DIR ${HPX_DIR} CACHE PATH "Kokkos_DIR")
+set(Kokkos_DIR ${HPX_DIR} CACHE PATH "Kokkos_DIR")
 else()
-    error("Kokkos_DIR not set")
+error("Kokkos_DIR not set")
 endif()
 
 # TBB package will be required for stdTbb build
 if(TBB_DIR)
-    set(TBB_DIR ${HPX_DIR} CACHE PATH "TBB_DIR")
+set(TBB_DIR ${HPX_DIR} CACHE PATH "TBB_DIR")
 else()
-    error("TBB_DIR not set")
+error("TBB_DIR not set")
 endif()
 
-# nvhpc 22.9 and beyond is recommended 
+# nvhpc 22.9 and beyond, or LLVM 18.0+, are recommended
 if(NVCXX)
     set(NVCXX ${NVCXX} CACHE PATH "NVCXX")
 else()
diff --git a/nvc/CMakeLists.txt b/nvc/CMakeLists.txt
index 196721c..2632744 100644
--- a/nvc/CMakeLists.txt
+++ b/nvc/CMakeLists.txt
@@ -1,9 +1,27 @@
 set(CMAKE_CXX_COMPILER ${NVCXX})
 
-set(CMAKE_CXX_FLAGS "-w -fast -Mnouniform -Mfprelaxed -stdpar=multicore -std=c++11 -DUSE_MPI=0 --gcc-toolchain=/opt/cray/pe/gcc/11.2.0/bin/")
-add_executable(nvcParMulticore nvcPar.cpp)
-target_include_directories(nvcParMulticore PRIVATE "${CMAKE_CURRENT_LIST_DIR}/commons")    
+if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+    add_executable(nvcParMulticore nvcPar.cpp)
+    target_compile_definitions(nvcParMulticore PRIVATE USE_MPI=0)
+    target_include_directories(nvcParMulticore PRIVATE "${CMAKE_CURRENT_LIST_DIR}/commons")
+    target_compile_options(nvcParMulticore PRIVATE -fopenmp-simd -march=native -ffast-math)
+    target_link_libraries(nvcParMulticore PRIVATE tbb)
 
-set(CMAKE_CXX_FLAGS "-w -fast -Mnouniform -Mfprelaxed -stdpar=gpu -std=c++11 -DUSE_MPI=0")
-add_executable(nvcParGpu nvcPar.cpp)
-target_include_directories(nvcParGpu PRIVATE "${CMAKE_CURRENT_LIST_DIR}/commons")    
+    add_executable(nvcParGpu nvcPar.cpp)
+    target_compile_definitions(nvcParGpu PRIVATE USE_MPI=0)
+    target_include_directories(nvcParGpu PRIVATE "${CMAKE_CURRENT_LIST_DIR}/commons")
+    target_compile_options(nvcParGpu PRIVATE --hipstdpar --hipstdpar-path=${STDPAR_PATH} --offload-arch=${STDPAR_TARGET} -ffast-math)
+    if (NOT STDPAR_TARGET MATCHES "^gfx9")
+        target_compile_options(nvcParGpu PRIVATE --hipstdpar-interpose-alloc)
+    endif ()
+    target_link_libraries(nvcParGpu PRIVATE tbb)
+    target_link_options(nvcParGpu PRIVATE --hipstdpar)
+else ()
+    set(CMAKE_CXX_FLAGS "-w -fast -Mnouniform -Mfprelaxed -stdpar=multicore -std=c++11 -DUSE_MPI=0 --gcc-toolchain=/opt/cray/pe/gcc/11.2.0/bin/")
+    add_executable(nvcParMulticore nvcPar.cpp)
+    target_include_directories(nvcParMulticore PRIVATE "${CMAKE_CURRENT_LIST_DIR}/commons")
+
+    set(CMAKE_CXX_FLAGS "-w -fast -Mnouniform -Mfprelaxed -stdpar=gpu -std=c++11 -DUSE_MPI=0")
+    add_executable(nvcParGpu nvcPar.cpp)
+    target_include_directories(nvcParGpu PRIVATE "${CMAKE_CURRENT_LIST_DIR}/commons")
+endif()
\ No newline at end of file

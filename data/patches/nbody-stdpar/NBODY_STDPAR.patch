diff --git a/CMakeLists.txt b/CMakeLists.txt
index d01dd79..913b94c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,10 +4,14 @@ set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 set(DEVICE_CXX_FLAGS "")
-if (ENABLE_NVIDIA_GPU)
+if (ENABLE_NVIDIA_GPU AND ENABLE_AMD_GPU)
+  message(FATAL_ERROR "ENABLE_NVIDIA_GPU and ENABLE_AMD_GPU are mutually exclusive.")
+elseif (ENABLE_NVIDIA_GPU)
   enable_language(CUDA)
   set(CMAKE_CXX_COMPILER "nvc++")
   string(APPEND DEVICE_CXX_FLAGS " -stdpar=gpu -fast")
+elseif (ENABLE_AMD_GPU)
+  string(APPEND DEVICE_CXX_FLAGS " --hipstdpar-path=${STDPAR_PATH} --offload-arch=${STDPAR_TARGET}")
 else()
   set(CMAKE_CXX_COMPILER "g++")
   string(APPEND DEVICE_CXX_FLAGS " -Ofast -march=native")
@@ -41,6 +45,10 @@ if (ENABLE_NVIDIA_GPU)
   add_compile_definitions (ENABLE_CUDA)
   target_compile_options(grav PRIVATE -stdpar)
   target_link_options(grav PRIVATE -stdpar)
+elseif (ENABLE_AMD_GPU)
+  add_compile_definitions (ENABLE_HIP)
+  target_compile_options(grav PRIVATE --hipstdpar)
+  target_link_options(grav PRIVATE --hipstdpar)
 else()
   find_package(TBB REQUIRED)
   target_link_libraries(grav PRIVATE TBB::tbb)
diff --git a/README.md b/README.md
index a0494d1..4792fa5 100644
--- a/README.md
+++ b/README.md
@@ -4,6 +4,8 @@ Simple Nbody gravitational simulator utilizing C++ Standard Parallelism.
 Build this project by invoking the shell script in the top-level source directory:
 sh build_nbody.sh
 
-Toggle the ENABLE_NVIDIA_GPU option in the script to switch between building for CPU or GPU.
+Toggle the ENABLE_NVIDIA_GPU or ENABLE_AMD_GPU option in the script to switch between building for CPU or GPU.
+ENABLE_NVIDIA_GPU and ENABLE_AMD_GPU are mutually exclusive.
 Setting ENABLE_NVIDIA_GPU:BOOL=ON requires a Nvidia GPU, CUDA, and the Nvidia HPC SDK.
-Setting ENABLE_NVIDIA_GPU:BOOL=OFF requires the Intel TBB library to be available.
+Setting ENABLE_AMD_GPU:BOOL=ON requires an AMD GPU, ROCm and Clang/LLVM.
+Setting ENABLE_NVIDIA_GPU:BOOL=OFF and ENABLE_AMD_GPU:BOOL=OFF requires the Intel TBB library to be available.
diff --git a/physics_impl.hh b/physics_impl.hh
index 694f54e..cb0cc2d 100644
--- a/physics_impl.hh
+++ b/physics_impl.hh
@@ -14,6 +14,8 @@ inline T inv_sqrt(const T x)
 {
 #ifdef ENABLE_CUDA
   return rsqrtf(x);
+#elif defined(ENABLE_HIP)
+  return T{1} / sqrtf(x);
 #else
   __m128 y = _mm_set_ss(x); y = _mm_rsqrt_ss(y); return _mm_cvtss_f32(y);
 #endif
diff --git a/system.hh b/system.hh
index 4be37a7..b564030 100644
--- a/system.hh
+++ b/system.hh
@@ -4,7 +4,7 @@
 #include <vector>
 
 struct Config {
-#ifdef ENABLE_CUDA
+#if defined(ENABLE_CUDA) || defined(ENABLE_HIP)
   int device{1};
 #else
   int device{2};

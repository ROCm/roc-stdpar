diff --git a/src/main.cpp b/src/main.cpp
index 3035da0..6af2cb3 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -9,6 +9,7 @@
 #include <vector>
 #include <numeric>
 #include <cmath>
+#include <math.h> // For fabs
 #include <limits>
 #include <chrono>
 #include <algorithm>
@@ -93,7 +94,7 @@ int main(int argc, char *argv[])
   if (use_float)
     run<float>();
   else
-    run<double>(); 
+    run<double>();
 
 }
 
@@ -284,7 +285,7 @@ void run()
 
 #elif defined(THRUST)
   // Use the Thrust implementation
-  stream = new ThrustStream<T>(ARRAY_SIZE, deviceIndex); 
+  stream = new ThrustStream<T>(ARRAY_SIZE, deviceIndex);
 
 #elif defined(ACC)
   // Use the OpenACC implementation
@@ -403,7 +404,7 @@ void run()
       {
         std::cout
           << std::left << std::setw(12) << labels[i]
-          << std::left << std::setw(12) << std::setprecision(3) << 
+          << std::left << std::setw(12) << std::setprecision(3) <<
             ((mibibytes) ? pow(2.0, -20.0) : 1.0E-6) * sizes[i] / (*minmax.first)
           << std::left << std::setw(12) << std::setprecision(5) << *minmax.first
           << std::left << std::setw(12) << std::setprecision(5) << *minmax.second
diff --git a/src/std-data/model.cmake b/src/std-data/model.cmake
index ef69f30..f4a42c2 100644
--- a/src/std-data/model.cmake
+++ b/src/std-data/model.cmake
@@ -19,6 +19,19 @@ register_flag_optional(NVHPC_OFFLOAD
            ccall - Compile for all supported compute capabilities"
         "")
 
+register_flag_optional(CLANG_OFFLOAD
+        "Enable offloading support (via the non-standard `-stdpar`) for
+         Clang/LLVM. The values are AMDGPU processors (https://www.llvm.org/docs/AMDGPUUsage.html#processors)
+         which will be passed in via `--offload-arch=` argument.
+
+         Example values are:
+           gfx906  - Compile for Vega20 GPUs
+           gfx908  - Compile for CDNA1 GPUs
+           gfx90a  - Compile for CDNA2 GPUs
+           gfx1030 - Compile for RDNA2 NV21 GPUs
+           gfx1100 - Compile for RDNA3 NV31 GPUs"
+        "")
+
 macro(setup)
     set(CMAKE_CXX_STANDARD 17)
 
@@ -29,5 +42,14 @@ macro(setup)
         register_append_link_flags(${NVHPC_FLAGS})
     endif ()
 
+    if (CLANG_OFFLOAD)
+        set(CLANG_FLAGS -stdpar --stdpar-path=${CLANG_STDPAR_PATH} --offload-arch=${CLANG_OFFLOAD})
+        if (NOT CLANG_OFFLOAD MATCHES "^gfx9")
+            list(APPEND CLANG_FLAGS --stdpar-interpose-alloc)
+        endif ()
+
+        register_append_cxx_flags(ANY ${CLANG_FLAGS})
+        register_append_link_flags(-stdpar)
+    endif ()
 
 endmacro()
diff --git a/src/std-indices/model.cmake b/src/std-indices/model.cmake
index ef69f30..f4a42c2 100644
--- a/src/std-indices/model.cmake
+++ b/src/std-indices/model.cmake
@@ -19,6 +19,19 @@ register_flag_optional(NVHPC_OFFLOAD
            ccall - Compile for all supported compute capabilities"
         "")
 
+register_flag_optional(CLANG_OFFLOAD
+        "Enable offloading support (via the non-standard `-stdpar`) for
+         Clang/LLVM. The values are AMDGPU processors (https://www.llvm.org/docs/AMDGPUUsage.html#processors)
+         which will be passed in via `--offload-arch=` argument.
+
+         Example values are:
+           gfx906  - Compile for Vega20 GPUs
+           gfx908  - Compile for CDNA1 GPUs
+           gfx90a  - Compile for CDNA2 GPUs
+           gfx1030 - Compile for RDNA2 NV21 GPUs
+           gfx1100 - Compile for RDNA3 NV31 GPUs"
+        "")
+
 macro(setup)
     set(CMAKE_CXX_STANDARD 17)
 
@@ -29,5 +42,14 @@ macro(setup)
         register_append_link_flags(${NVHPC_FLAGS})
     endif ()
 
+    if (CLANG_OFFLOAD)
+        set(CLANG_FLAGS -stdpar --stdpar-path=${CLANG_STDPAR_PATH} --offload-arch=${CLANG_OFFLOAD})
+        if (NOT CLANG_OFFLOAD MATCHES "^gfx9")
+            list(APPEND CLANG_FLAGS --stdpar-interpose-alloc)
+        endif ()
+
+        register_append_cxx_flags(ANY ${CLANG_FLAGS})
+        register_append_link_flags(-stdpar)
+    endif ()
 
 endmacro()
